data from api endpoint can be fetched via:
1. via templates UI (if user is_staff => buttons for requests)

2. via custom management commands (see further):
save in db:
    manually:
        2.1. get_api_mix with args ( city= default, hotel)
        2.2. runscript ( django-extentions) 
    cron jobs
        2.3.  get_city and  get_hotel
save in csv file 
    2.4 dump_to_csv

A. git branch main

1.core functions are located in  utils/request_help.py
    via HTTPBasicAuth request to api points to fetch data about cities and hotels 
    corresponding objects in the database get created only once and later will be updated (get_or_create)
    # option (delete all existing objects and .bulk_create them again in db) see below in branch dj-extention
2. custom management commands with arguments or without args make first request.head;
if status_code OK |=> call core functions

B. git branch dj-extention (package == django-extensions)
1. core functions located in folder 'scripts' with 2 files (city_csv_gen.py/hotel_csv_gen.py)   
   via HTTPBasicAuth request to api points to fetch data about cities and hotels 
   prev existed objects cities/hotels get deleted from the db and new objects created via .bulk_create
2. management command is from dj-extentions package == runscript


Extra's:    
    js
    - custom ajax
    - htmx
    - django-ajax-selected: input 3 chars to get city to search (front,admin)
    unittests
    fixtures

Models and perms:
models: User,HotelManager,City,HotelManager

superuser can via admin panel create hotel manager|=> via post_save signal correspond user gets attr == is_hotel_magaer
created hotel manager:
    can only manage hotels in a given city ( via UI in menu; no access to admin panel)
    gets UI menu button: Dashboard    
    manager can manage hotels only in a given city (city can have one or more manager(s))


P.s
Management commands: 
A. fetch data and save in db
    #manually
    python manage.py  get_api (or python manage.py  get_cities --fetch city)
    python manage.py  get_api --fetch hotel

    #cron
    python manage.py  get_city
    python manage.py  get_hotel
    # cron job at 2:30 a.m. each day
    30 2  *    *   *    /home/..../city/city/cron/get_hotel.sh >> /home/.../logs/city.log

    #django-extentions
    python manage.py runscript city_csv_gen
    python manage.py runscript hotel_csv_gen
B.
    fetch data and save in csv files 
    python manage.py  dump_to_csv (or python manage.py  dump_to_csv --catch city)
    python manage.py  dump_to_csv --catch hotel   

Failures:
    no success in setup django-extentions cron jobs




